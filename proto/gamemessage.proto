syntax = "proto3";
import "vector2.proto";
package gamemessages;

message Action{
    enum Type{ 
        Thrust = 0; Shoot=1; Skill=2;
    }
    Type type = 1;
    string id = 2;
    vec.vec2f onPoint =3;
    float dt =4;
    float startedOn = 5;
    int32 skillId = 6;
}

message Handshake{
    string name=1;
}
message HandshakeResponse{
    string id = 1;
    double zeroTime = 2;
}
message Spawn{
}

message Scene{
    message Object{
        enum Type{
            Food=0; Harvester=1; SmallShip=2;
        }
        Type type =1;
        vec.vec2f position=2;
        vec.vec2f velocity=3;
        int32 lastProcessedCommand=4;
    }
    repeated Object objects = 1;
}

message param1{
    float v = 1;
    float dv = 2;
}

message param2{
    vec.vec2f v = 1;
    vec.vec2f dv = 2;
}

message Parameter{
    double calculatedAt = 1;
    oneof p{
        param1 scalar = 2;
        param2 vec2   = 4;
    }
}

message PlayerState{
    bool isAlive = 2;
    map<string, Parameter> parameters = 4;
}

message OutcomingMessage{
    enum Type{
        HandshakeResponse=0; Scene=1; PlayerState=2;
        Action = 3;
    }
    Type type =1;
    oneof msg{
        HandshakeResponse handshakeResponse=5;
        Scene scene=10;
        PlayerState playerState=15;
        Action action = 20;
    } 

}

message IncomingMessage{
    enum Type{
        ACTION=0; HANDSHAKE =2; SPAWN=3;
    }
     Type type=1;
    oneof msg{
        Handshake handshake =5;
        Action action=13;
        Spawn spawn = 17;
    }
}
